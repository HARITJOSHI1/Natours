// exports.checkData = (req, res, next) => {
//   if (req.body.id > 2) {
//     console.log('Your in');
//   } else {
//     return res.status(400).json({
//       status: 'fail',
//       message: "Sorry pls check your id !",
//     });
//   }
//   next();
// };



  // Adding changes to the original file
  // fs.writeFile(
  //   `${__dirname}/../dev-data/data/tours-simple.json`,
  //   change,
  //   () => {
  //     res.status(200).json({
  //       status: 'success',
  //       data: {
  //         tour: newData,
  //       },
  //     });
  //   }
  // );



   //  params will be vars in obj holding string so convert into number
  // const id = +req.params.id;
  // const resData = dataJson.find((el) => el.id === id);
  // res.status(200).json({
  //   status: 'success',
  //   data: {
  //     tour: ,
  //   },
  // });




  Tours:

  // exports.getSingleTour = catchAsync(async (req, res, next) => {

//   const resData = await tours.findById(req.params.id).populate('reviews');

//   if (!resData) {
//     const err = new AppError(
//       `Could not find any tour with that ID ${req.params.id}`,
//       404
//     );
//     return next(err);
//   }

//   res.status(200).json({
//     status: 'success',
//     data: resData,
//   });
// });


// exports.deleteTour = catchAsync(async (req, res, next) => {
//   const id = req.params.id;
//   const deleteTour = await tours.deleteOne({ _id: id });
  
//   if (!deleteTour.n) {
//     const err = new AppError(
//       `Could not find any tour with that ID ${req.params.id}`,
//       404
//     );
//     return next(err);
//   }

//   res.status(200).json({
//     status: 'success',
//     message: `Deleted the document with id ${id}`,
//   });
// });



Reviews:

exports.getTopReviews = catchAsync(async (req, res) => {
//   // const topReviews = await Review.find({ ratings: { $gt: 3 } }).limit(10);
//   // const response = { status: 'success', topReviews };
//   // if (topReviews.length === 0) response.topReviews = "No reviews available";
//   // res.status(200).json(response);

//   const topReviews = await Review.find().sort('-createdAt');
//   const response = { status: 'success', topReviews };
//   if (topReviews.length === 0) response.topReviews = "No reviews available";
//   res.status(200).json(response);

// });